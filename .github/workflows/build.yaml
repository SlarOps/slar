name: Build Docker Images on Dockerfile changes

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.name }}
      cancel-in-progress: false
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: ai
            context: api/ai
            dockerfile: api/ai/Dockerfile
            image: ghcr.io/${{ github.repository_owner }}/slar-ai
          - name: api
            context: api
            dockerfile: api/Dockerfile
            image: ghcr.io/${{ github.repository_owner }}/slar-api
          - name: workers
            context: api/workers
            dockerfile: api/workers/Dockerfile
            image: ghcr.io/${{ github.repository_owner }}/slar-slack-worker
          - name: web
            context: web/slar
            dockerfile: web/slar/Dockerfile
            image: ghcr.io/${{ github.repository_owner }}/slar-web
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta (${{ matrix.name }})
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=tag

      - name: Build and push (${{ matrix.name }})
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          sbom: true
          provenance: true
