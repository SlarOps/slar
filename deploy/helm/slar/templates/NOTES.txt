╔══════════════════════════════════════════════════════════════════════╗
║                                                                      ║
║   ███████╗██╗      █████╗ ██████╗                                   ║
║   ██╔════╝██║     ██╔══██╗██╔══██╗                                  ║
║   ███████╗██║     ███████║██████╔╝                                  ║
║   ╚════██║██║     ██╔══██║██╔══██╗                                  ║
║   ███████║███████╗██║  ██║██║  ██║                                  ║
║   ╚══════╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝                                  ║
║                                                                      ║
║   Smart Live Alert & Response System                                ║
║                                                                      ║
╚══════════════════════════════════════════════════════════════════════╝

Thank you for installing {{ .Chart.Name }} version {{ .Chart.Version }}!

Your release is named: {{ .Release.Name }}
Deployed in namespace: {{ .Release.Namespace }}

═══════════════════════════════════════════════════════════════════════

📦 DEPLOYED COMPONENTS:

{{- range $name, $comp := .Values.components }}
  ✓ {{ $name | upper }}
    {{- if and $comp.service $comp.service.enabled }}
    Service: {{ include "slar.componentFullname" (dict "root" $ "name" $name) }}
    {{- if $comp.service.port }}
    Port: {{ $comp.service.port }}
    {{- end }}
    {{- end }}
{{- end }}

═══════════════════════════════════════════════════════════════════════

🚀 ACCESSING YOUR APPLICATION:

{{- if .Values.components.kong }}
{{- $kongService := .Values.components.kong.service }}
{{- if eq $kongService.type "LoadBalancer" }}

1. Get the Kong LoadBalancer IP/Hostname:

   export KONG_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "slar.componentFullname" (dict "root" . "name" "kong") }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
   export KONG_HOST=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "slar.componentFullname" (dict "root" . "name" "kong") }} -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')

   echo "Kong Gateway: http://${KONG_IP:-$KONG_HOST}:8000"

   NOTE: It may take a few minutes for the LoadBalancer to be ready.

2. Access the application:

   Web UI:       http://${KONG_IP:-$KONG_HOST}:8000/
   API:          http://${KONG_IP:-$KONG_HOST}:8000/api/
   AI Service:   http://${KONG_IP:-$KONG_HOST}:8000/ai/
   WebSocket:    ws://${KONG_IP:-$KONG_HOST}:8000/ws/chat
   Kong Admin:   http://${KONG_IP:-$KONG_HOST}:8001/

{{- else if eq $kongService.type "NodePort" }}

1. Get the Kong NodePort:

   export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "slar.componentFullname" (dict "root" . "name" "kong") }})
   export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")

   echo "Kong Gateway: http://$NODE_IP:$NODE_PORT"

2. Access the application:

   Web UI:       http://$NODE_IP:$NODE_PORT/
   API:          http://$NODE_IP:$NODE_PORT/api/
   AI Service:   http://$NODE_IP:$NODE_PORT/ai/
   WebSocket:    ws://$NODE_IP:$NODE_PORT/ws/chat

{{- else }}

1. Use port-forward to access Kong:

   kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ include "slar.componentFullname" (dict "root" . "name" "kong") }} 8000:8000

2. Access the application locally:

   Web UI:       http://localhost:8000/
   API:          http://localhost:8000/api/
   AI Service:   http://localhost:8000/ai/
   WebSocket:    ws://localhost:8000/ws/chat
   Kong Admin:   http://localhost:8001/ (requires separate port-forward)

{{- end }}
{{- end }}

═══════════════════════════════════════════════════════════════════════

📊 MONITORING YOUR DEPLOYMENT:

1. Check pod status:
   kubectl get pods --namespace {{ .Release.Namespace }} -l app.kubernetes.io/name={{ include "slar.name" . }}

2. View logs:
   # API logs
   kubectl logs --namespace {{ .Release.Namespace }} -l app.kubernetes.io/component=api -f

   # Web logs
   kubectl logs --namespace {{ .Release.Namespace }} -l app.kubernetes.io/component=web -f

   # Worker logs
   kubectl logs --namespace {{ .Release.Namespace }} -l app.kubernetes.io/component=worker -f

   # Kong logs
   kubectl logs --namespace {{ .Release.Namespace }} -l app.kubernetes.io/component=kong -f

3. Check services:
   kubectl get svc --namespace {{ .Release.Namespace }} -l app.kubernetes.io/name={{ include "slar.name" . }}

═══════════════════════════════════════════════════════════════════════

🔧 CONFIGURATION:

To customize your deployment, create a custom values file and upgrade:

  helm upgrade {{ .Release.Name }} slar \
    --namespace {{ .Release.Namespace }} \
    -f custom-values.yaml

For production deployments, use:

  helm upgrade {{ .Release.Name }} slar \
    --namespace {{ .Release.Namespace }} \
    -f values-production.yaml

═══════════════════════════════════════════════════════════════════════

📚 DOCUMENTATION:

For more information, see:
  - Chart README: https://github.com/slarops/slar/tree/main/deploy/helm/slar
  - Project Documentation: https://github.com/slarops/slar

═══════════════════════════════════════════════════════════════════════

Happy monitoring! 🎉
