# version: "3.9"

services:
  ai:
    container_name: slar-ai
    build:
      context: ../../api/ai
    image: 192.168.100.137:5000/slar-ai:latest
    expose:
      - "8002"
    ports:
      - "8002:8002"
    environment:
      - PORT=8002
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-api-key}
      - API_BASE_URL=http://api:8080
      - DATA_STORE=/data
      - TOKENIZERS_PARALLELISM=false
      - CONTEXT7_API_KEY=${CONTEXT7_API_KEY:-}
      - ENABLE_KUBERNETES=false
      - ENABLE_CODE_EXECUTOR=false
    volumes:
      - slar-ai-data:/data
      - slar-ai-cache:/root/.cache
    restart: unless-stopped
    networks:
      - slar-network
  
  terminal:
    container_name: slar-ai-terminal
    build:
      context: ../../api/ai/terminal
    image: 192.168.100.137:5000/slar-ai-terminal:latest
    expose:
      - "8003"
    ports:
      - "8003:8003"
    restart: unless-stopped
    networks:
      - slar-network

  api:
    container_name: slar-api
    build:
      context: ../../api
    image: 192.168.100.137:5000/slar-api:latest
    expose:
      - "8080"
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - DATABASE_URL=${DATABASE_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY:-your-supabase-anon-key}
      - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET:-your-supabase-jwt-secret}
      - SLAR_ENV=production
    restart: unless-stopped
    networks:
      - slar-network

  worker:
    container_name: slar-worker
    build:
      context: ../../api
    image: 192.168.100.137:5000/slar-api:latest
    command: ["./worker"]
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:postgres@db:5432/postgres?sslmode=disable}
      - POLL_INTERVAL=1
      - BATCH_SIZE=10
      - MAX_RETRIES=3
      - LOG_LEVEL=DEBUG
      - LOG_FILE=/app/worker.log
    restart: unless-stopped
    networks:
      - slar-network

  slack-worker:
    container_name: slar-slack-worker
    build:
      context: ../../api/workers
    image: 192.168.100.137:5000/slar-slack-worker:latest
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:postgres@db:5432/postgres?sslmode=disable}
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN:-your-slack-bot-token}
      - SLACK_APP_TOKEN=${SLACK_APP_TOKEN:-your-slack-app-token}
      - API_BASE_URL=http://api:8080
      - POLL_INTERVAL=1
      - BATCH_SIZE=10
      - MAX_RETRIES=3
      - LOG_LEVEL=DEBUG
      - LOG_FILE=/app/slack_worker.log
    restart: unless-stopped
    networks:
      - slar-network

  web:
    container_name: slar-web
    build:
      context: ../../web/slar
    image: 192.168.100.137:5000/slar-web:latest
    expose:
      - "3000"
    environment:
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL:-http://localhost:8000}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY:-your-supabase-anon-key}
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - slar-network
  
  kong:
    container_name: kong
    image: kong:2.8.1
    ports:
      - "8000:8000/tcp"
      - "8443:8443/tcp"
      # Admin API (optional - kong admin)
      - "8001:8001/tcp"
    volumes:
      - ./volumes/api/kong.yaml:/home/kong/temp.yml:ro,z
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /home/kong/kong.yml
      # https://github.com/supabase/cli/issues/14
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth
      KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
      KONG_NGINX_PROXY_PROXY_BUFFERS: 64 160k
      DASHBOARD_USERNAME: ${DASHBOARD_USERNAME:-admin}
      DASHBOARD_PASSWORD: ${DASHBOARD_PASSWORD:-admin}
    depends_on:
      - api
      - ai
      - web
    restart: unless-stopped
    networks:
      - slar-network
    entrypoint: bash -c 'eval "echo \"$$(cat ~/temp.yml)\"" > ~/kong.yml && /docker-entrypoint.sh kong docker-start'

networks:
  slar-network:
    driver: bridge

volumes:
  slar-ai-data:
    driver: local
  slar-ai-cache:
    driver: local


